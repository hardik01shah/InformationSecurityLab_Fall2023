import sys

file = open(sys.argv[1], 'r')
lines = file.readlines()

lines = [line[:-1] for line in lines]

main_addr = int(lines[-1], 16)
init_curve_addr = main_addr - 0x6000
free_curve_addr = main_addr - 0x5000
cmp_dh_key_addr = main_addr - 0x1000
doubleadd_addr = main_addr - 0x2000
pdouble_addr = main_addr - 0x4000
padd_addr = main_addr - 0x3000
tst_bit_addr = main_addr - 0x8000

print("main_addr: ", hex(main_addr))
print("init_curve_addr: ", hex(init_curve_addr))
print("free_curve_addr: ", hex(free_curve_addr))
print("cmp_dh_key_addr: ", hex(cmp_dh_key_addr))
print("doubleadd_addr: ", hex(doubleadd_addr))
print("pdouble_addr: ", hex(pdouble_addr))
print("padd_addr: ", hex(padd_addr))
print("tst_bit_addr: ", hex(tst_bit_addr))

start = 39
print(f"start_address: {lines[start]}")
assert lines[start] == hex(doubleadd_addr)

priv_key = "1"

i = start
total_bits = 1
while True:
    if (lines[i] == hex(doubleadd_addr) and 
        lines[i+1] == hex(pdouble_addr)):
        total_bits += 1
    if (lines[i] == hex(pdouble_addr) and
        lines[i+1] == hex(doubleadd_addr) and 
        lines[i+2] == hex(tst_bit_addr) and 
        lines[i+3] == hex(doubleadd_addr)):
        if lines[i+4] == hex(padd_addr):
            priv_key += "1"
        else:
            assert (
                lines[i+4] == hex(pdouble_addr) or 
                lines[i+4] == hex(cmp_dh_key_addr))
            priv_key += "0"
        assert len(priv_key) == total_bits
    
    if lines[i] == hex(cmp_dh_key_addr):
        break
        
    i += 1

priv_key = hex(int(priv_key, 2))[2:]
target_key = sys.argv[1].split("/")[-1][:-4]
print("priv_key: ", priv_key)
# print("target_key: ", target_key)

# assert priv_key == target_key
# print("SUCCESSFULL EXPLOIT")


